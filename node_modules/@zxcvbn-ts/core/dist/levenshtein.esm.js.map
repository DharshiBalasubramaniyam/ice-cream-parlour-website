{"version":3,"file":"levenshtein.esm.js","sources":["../src/levenshtein.ts"],"sourcesContent":["import { distance } from 'fastest-levenshtein';\nconst getUsedThreshold = (password, entry, threshold) => {\n    const isPasswordToShort = password.length <= entry.length;\n    const isThresholdLongerThanPassword = password.length <= threshold;\n    const shouldUsePasswordLength = isPasswordToShort || isThresholdLongerThanPassword;\n    // if password is too small use the password length divided by 4 while the threshold needs to be at least 1\n    return shouldUsePasswordLength ? Math.ceil(password.length / 4) : threshold;\n};\nconst findLevenshteinDistance = (password, rankedDictionary, threshold) => {\n    let foundDistance = 0;\n    const found = Object.keys(rankedDictionary).find((entry) => {\n        const usedThreshold = getUsedThreshold(password, entry, threshold);\n        if (Math.abs(password.length - entry.length) > usedThreshold) {\n            return false;\n        }\n        const foundEntryDistance = distance(password, entry);\n        const isInThreshold = foundEntryDistance <= usedThreshold;\n        if (isInThreshold) {\n            foundDistance = foundEntryDistance;\n        }\n        return isInThreshold;\n    });\n    if (found) {\n        return {\n            levenshteinDistance: foundDistance,\n            levenshteinDistanceEntry: found,\n        };\n    }\n    return {};\n};\nexport default findLevenshteinDistance;\n//# sourceMappingURL=levenshtein.js.map"],"names":["getUsedThreshold","password","entry","threshold","isPasswordToShort","length","isThresholdLongerThanPassword","shouldUsePasswordLength","Math","ceil","findLevenshteinDistance","rankedDictionary","foundDistance","found","Object","keys","find","usedThreshold","abs","foundEntryDistance","distance","isInThreshold","levenshteinDistance","levenshteinDistanceEntry"],"mappings":";;AACA,MAAMA,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,KAAK;EACrD,MAAMC,iBAAiB,GAAGH,QAAQ,CAACI,MAAM,IAAIH,KAAK,CAACG,MAAM,CAAA;AACzD,EAAA,MAAMC,6BAA6B,GAAGL,QAAQ,CAACI,MAAM,IAAIF,SAAS,CAAA;AAClE,EAAA,MAAMI,uBAAuB,GAAGH,iBAAiB,IAAIE,6BAA6B,CAAA;AAClF;AACA,EAAA,OAAOC,uBAAuB,GAAGC,IAAI,CAACC,IAAI,CAACR,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,GAAGF,SAAS,CAAA;AAC/E,CAAC,CAAA;AACKO,MAAAA,uBAAuB,GAAGA,CAACT,QAAQ,EAAEU,gBAAgB,EAAER,SAAS,KAAK;EACvE,IAAIS,aAAa,GAAG,CAAC,CAAA;AACrB,EAAA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAACK,IAAI,CAAEd,KAAK,IAAK;IACxD,MAAMe,aAAa,GAAGjB,gBAAgB,CAACC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,CAAC,CAAA;AAClE,IAAA,IAAIK,IAAI,CAACU,GAAG,CAACjB,QAAQ,CAACI,MAAM,GAAGH,KAAK,CAACG,MAAM,CAAC,GAAGY,aAAa,EAAE;AAC1D,MAAA,OAAO,KAAK,CAAA;AAChB,KAAA;AACA,IAAA,MAAME,kBAAkB,GAAGC,QAAQ,CAACnB,QAAQ,EAAEC,KAAK,CAAC,CAAA;AACpD,IAAA,MAAMmB,aAAa,GAAGF,kBAAkB,IAAIF,aAAa,CAAA;AACzD,IAAA,IAAII,aAAa,EAAE;AACfT,MAAAA,aAAa,GAAGO,kBAAkB,CAAA;AACtC,KAAA;AACA,IAAA,OAAOE,aAAa,CAAA;AACxB,GAAC,CAAC,CAAA;AACF,EAAA,IAAIR,KAAK,EAAE;IACP,OAAO;AACHS,MAAAA,mBAAmB,EAAEV,aAAa;AAClCW,MAAAA,wBAAwB,EAAEV,KAAAA;KAC7B,CAAA;AACL,GAAA;AACA,EAAA,OAAO,EAAE,CAAA;AACb;;;;"}