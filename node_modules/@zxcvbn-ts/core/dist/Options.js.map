{"version":3,"file":"Options.js","sources":["../src/Options.ts"],"sourcesContent":["import { buildRankedDictionary } from './helper';\nimport l33tTable from './data/l33tTable';\nimport translationKeys from './data/translationKeys';\nimport TrieNode from './matcher/dictionary/variants/matching/unmunger/TrieNode';\nimport l33tTableToTrieNode from './matcher/dictionary/variants/matching/unmunger/l33tTableToTrieNode';\nexport class Options {\n    constructor() {\n        this.matchers = {};\n        this.l33tTable = l33tTable;\n        this.trieNodeRoot = l33tTableToTrieNode(l33tTable, new TrieNode());\n        this.dictionary = {\n            userInputs: [],\n        };\n        this.rankedDictionaries = {};\n        this.rankedDictionariesMaxWordSize = {};\n        this.translations = translationKeys;\n        this.graphs = {};\n        this.useLevenshteinDistance = false;\n        this.levenshteinThreshold = 2;\n        this.l33tMaxSubstitutions = 100;\n        this.maxLength = 256;\n        this.setRankedDictionaries();\n    }\n    // eslint-disable-next-line max-statements,complexity\n    setOptions(options = {}) {\n        if (options.l33tTable) {\n            this.l33tTable = options.l33tTable;\n            this.trieNodeRoot = l33tTableToTrieNode(options.l33tTable, new TrieNode());\n        }\n        if (options.dictionary) {\n            this.dictionary = options.dictionary;\n            this.setRankedDictionaries();\n        }\n        if (options.translations) {\n            this.setTranslations(options.translations);\n        }\n        if (options.graphs) {\n            this.graphs = options.graphs;\n        }\n        if (options.useLevenshteinDistance !== undefined) {\n            this.useLevenshteinDistance = options.useLevenshteinDistance;\n        }\n        if (options.levenshteinThreshold !== undefined) {\n            this.levenshteinThreshold = options.levenshteinThreshold;\n        }\n        if (options.l33tMaxSubstitutions !== undefined) {\n            this.l33tMaxSubstitutions = options.l33tMaxSubstitutions;\n        }\n        if (options.maxLength !== undefined) {\n            this.maxLength = options.maxLength;\n        }\n    }\n    setTranslations(translations) {\n        if (this.checkCustomTranslations(translations)) {\n            this.translations = translations;\n        }\n        else {\n            throw new Error('Invalid translations object fallback to keys');\n        }\n    }\n    checkCustomTranslations(translations) {\n        let valid = true;\n        Object.keys(translationKeys).forEach((type) => {\n            if (type in translations) {\n                const translationType = type;\n                Object.keys(translationKeys[translationType]).forEach((key) => {\n                    if (!(key in translations[translationType])) {\n                        valid = false;\n                    }\n                });\n            }\n            else {\n                valid = false;\n            }\n        });\n        return valid;\n    }\n    setRankedDictionaries() {\n        const rankedDictionaries = {};\n        const rankedDictionariesMaxWorkSize = {};\n        Object.keys(this.dictionary).forEach((name) => {\n            rankedDictionaries[name] = buildRankedDictionary(this.dictionary[name]);\n            rankedDictionariesMaxWorkSize[name] =\n                this.getRankedDictionariesMaxWordSize(this.dictionary[name]);\n        });\n        this.rankedDictionaries = rankedDictionaries;\n        this.rankedDictionariesMaxWordSize = rankedDictionariesMaxWorkSize;\n    }\n    getRankedDictionariesMaxWordSize(list) {\n        const data = list.map((el) => {\n            if (typeof el !== 'string') {\n                return el.toString().length;\n            }\n            return el.length;\n        });\n        // do not use Math.max(...data) because it can result in max stack size error because every entry will be used as an argument\n        if (data.length === 0) {\n            return 0;\n        }\n        return data.reduce((a, b) => Math.max(a, b), -Infinity);\n    }\n    buildSanitizedRankedDictionary(list) {\n        const sanitizedInputs = [];\n        list.forEach((input) => {\n            const inputType = typeof input;\n            if (inputType === 'string' ||\n                inputType === 'number' ||\n                inputType === 'boolean') {\n                sanitizedInputs.push(input.toString().toLowerCase());\n            }\n        });\n        return buildRankedDictionary(sanitizedInputs);\n    }\n    extendUserInputsDictionary(dictionary) {\n        if (!this.dictionary.userInputs) {\n            this.dictionary.userInputs = [];\n        }\n        const newList = [...this.dictionary.userInputs, ...dictionary];\n        this.rankedDictionaries.userInputs =\n            this.buildSanitizedRankedDictionary(newList);\n        this.rankedDictionariesMaxWordSize.userInputs =\n            this.getRankedDictionariesMaxWordSize(newList);\n    }\n    addMatcher(name, matcher) {\n        if (this.matchers[name]) {\n            console.info(`Matcher ${name} already exists`);\n        }\n        else {\n            this.matchers[name] = matcher;\n        }\n    }\n}\nexport const zxcvbnOptions = new Options();\n//# sourceMappingURL=Options.js.map"],"names":["Options","constructor","matchers","l33tTable","trieNodeRoot","l33tTableToTrieNode","TrieNode","dictionary","userInputs","rankedDictionaries","rankedDictionariesMaxWordSize","translations","translationKeys","graphs","useLevenshteinDistance","levenshteinThreshold","l33tMaxSubstitutions","maxLength","setRankedDictionaries","setOptions","options","setTranslations","undefined","checkCustomTranslations","Error","valid","Object","keys","forEach","type","translationType","key","rankedDictionariesMaxWorkSize","name","buildRankedDictionary","getRankedDictionariesMaxWordSize","list","data","map","el","toString","length","reduce","a","b","Math","max","Infinity","buildSanitizedRankedDictionary","sanitizedInputs","input","inputType","push","toLowerCase","extendUserInputsDictionary","newList","addMatcher","matcher","console","info","zxcvbnOptions"],"mappings":"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"}