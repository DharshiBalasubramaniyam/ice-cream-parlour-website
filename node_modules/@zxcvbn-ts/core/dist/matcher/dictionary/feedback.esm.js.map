{"version":3,"file":"feedback.esm.js","sources":["../../../src/matcher/dictionary/feedback.ts"],"sourcesContent":["import { zxcvbnOptions } from '../../Options';\nimport { ALL_UPPER_INVERTED, START_UPPER } from '../../data/const';\nconst getDictionaryWarningPassword = (match, isSoleMatch) => {\n    let warning = null;\n    if (isSoleMatch && !match.l33t && !match.reversed) {\n        if (match.rank <= 10) {\n            warning = zxcvbnOptions.translations.warnings.topTen;\n        }\n        else if (match.rank <= 100) {\n            warning = zxcvbnOptions.translations.warnings.topHundred;\n        }\n        else {\n            warning = zxcvbnOptions.translations.warnings.common;\n        }\n    }\n    else if (match.guessesLog10 <= 4) {\n        warning = zxcvbnOptions.translations.warnings.similarToCommon;\n    }\n    return warning;\n};\nconst getDictionaryWarningWikipedia = (match, isSoleMatch) => {\n    let warning = null;\n    if (isSoleMatch) {\n        warning = zxcvbnOptions.translations.warnings.wordByItself;\n    }\n    return warning;\n};\nconst getDictionaryWarningNames = (match, isSoleMatch) => {\n    if (isSoleMatch) {\n        return zxcvbnOptions.translations.warnings.namesByThemselves;\n    }\n    return zxcvbnOptions.translations.warnings.commonNames;\n};\nconst getDictionaryWarning = (match, isSoleMatch) => {\n    let warning = null;\n    const dictName = match.dictionaryName;\n    const isAName = dictName === 'lastnames' || dictName.toLowerCase().includes('firstnames');\n    if (dictName === 'passwords') {\n        warning = getDictionaryWarningPassword(match, isSoleMatch);\n    }\n    else if (dictName.includes('wikipedia')) {\n        warning = getDictionaryWarningWikipedia(match, isSoleMatch);\n    }\n    else if (isAName) {\n        warning = getDictionaryWarningNames(match, isSoleMatch);\n    }\n    else if (dictName === 'userInputs') {\n        warning = zxcvbnOptions.translations.warnings.userInputs;\n    }\n    return warning;\n};\nexport default (match, isSoleMatch) => {\n    const warning = getDictionaryWarning(match, isSoleMatch);\n    const suggestions = [];\n    const word = match.token;\n    if (word.match(START_UPPER)) {\n        suggestions.push(zxcvbnOptions.translations.suggestions.capitalization);\n    }\n    else if (word.match(ALL_UPPER_INVERTED) && word.toLowerCase() !== word) {\n        suggestions.push(zxcvbnOptions.translations.suggestions.allUppercase);\n    }\n    if (match.reversed && match.token.length >= 4) {\n        suggestions.push(zxcvbnOptions.translations.suggestions.reverseWords);\n    }\n    if (match.l33t) {\n        suggestions.push(zxcvbnOptions.translations.suggestions.l33t);\n    }\n    return {\n        warning,\n        suggestions,\n    };\n};\n//# sourceMappingURL=feedback.js.map"],"names":["getDictionaryWarningPassword","match","isSoleMatch","warning","l33t","reversed","rank","zxcvbnOptions","translations","warnings","topTen","topHundred","common","guessesLog10","similarToCommon","getDictionaryWarningWikipedia","wordByItself","getDictionaryWarningNames","namesByThemselves","commonNames","getDictionaryWarning","dictName","dictionaryName","isAName","toLowerCase","includes","userInputs","suggestions","word","token","START_UPPER","push","capitalization","ALL_UPPER_INVERTED","allUppercase","length","reverseWords"],"mappings":"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"}