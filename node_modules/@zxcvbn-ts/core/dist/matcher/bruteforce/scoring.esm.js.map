{"version":3,"file":"scoring.esm.js","sources":["../../../src/matcher/bruteforce/scoring.ts"],"sourcesContent":["import { BRUTEFORCE_CARDINALITY, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR, } from '../../data/const';\nexport default ({ token }) => {\n    let guesses = BRUTEFORCE_CARDINALITY ** token.length;\n    if (guesses === Number.POSITIVE_INFINITY) {\n        guesses = Number.MAX_VALUE;\n    }\n    let minGuesses;\n    // small detail: make bruteforce matches at minimum one guess bigger than smallest allowed\n    // submatch guesses, such that non-bruteforce submatches over the same [i..j] take precedence.\n    if (token.length === 1) {\n        minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR + 1;\n    }\n    else {\n        minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR + 1;\n    }\n    return Math.max(guesses, minGuesses);\n};\n//# sourceMappingURL=scoring.js.map"],"names":["token","guesses","BRUTEFORCE_CARDINALITY","length","Number","POSITIVE_INFINITY","MAX_VALUE","minGuesses","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","Math","max"],"mappings":";;AACA,wBAAA,CAAe,CAAC;AAAEA,EAAAA,KAAAA;AAAM,CAAC,KAAK;AAC1B,EAAA,IAAIC,OAAO,GAAGC,sBAAsB,IAAIF,KAAK,CAACG,MAAM,CAAA;AACpD,EAAA,IAAIF,OAAO,KAAKG,MAAM,CAACC,iBAAiB,EAAE;IACtCJ,OAAO,GAAGG,MAAM,CAACE,SAAS,CAAA;AAC9B,GAAA;AACA,EAAA,IAAIC,UAAU,CAAA;AACd;AACA;AACA,EAAA,IAAIP,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACpBI,UAAU,GAAGC,gCAAgC,GAAG,CAAC,CAAA;AACrD,GAAC,MACI;IACDD,UAAU,GAAGE,+BAA+B,GAAG,CAAC,CAAA;AACpD,GAAA;AACA,EAAA,OAAOC,IAAI,CAACC,GAAG,CAACV,OAAO,EAAEM,UAAU,CAAC,CAAA;AACxC,CAAC;;;;"}