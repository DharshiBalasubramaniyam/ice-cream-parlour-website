{"version":3,"file":"scoring.esm.js","sources":["../../../src/matcher/regex/scoring.ts"],"sourcesContent":["import { MIN_YEAR_SPACE, REFERENCE_YEAR } from '../../data/const';\nexport default ({ regexName, regexMatch, token, }) => {\n    const charClassBases = {\n        alphaLower: 26,\n        alphaUpper: 26,\n        alpha: 52,\n        alphanumeric: 62,\n        digits: 10,\n        symbols: 33,\n    };\n    if (regexName in charClassBases) {\n        return (charClassBases[regexName] ** token.length);\n    }\n    // TODO add more regex types for example special dates like 09.11\n    // eslint-disable-next-line default-case\n    switch (regexName) {\n        case 'recentYear':\n            // conservative estimate of year space: num years from REFERENCE_YEAR.\n            // if year is close to REFERENCE_YEAR, estimate a year space of MIN_YEAR_SPACE.\n            return Math.max(Math.abs(parseInt(regexMatch[0], 10) - REFERENCE_YEAR), MIN_YEAR_SPACE);\n    }\n    return 0;\n};\n//# sourceMappingURL=scoring.js.map"],"names":["regexName","regexMatch","token","charClassBases","alphaLower","alphaUpper","alpha","alphanumeric","digits","symbols","length","Math","max","abs","parseInt","REFERENCE_YEAR","MIN_YEAR_SPACE"],"mappings":";;AACA,mBAAA,CAAe,CAAC;EAAEA,SAAS;EAAEC,UAAU;AAAEC,EAAAA,KAAAA;AAAO,CAAC,KAAK;AAClD,EAAA,MAAMC,cAAc,GAAG;AACnBC,IAAAA,UAAU,EAAE,EAAE;AACdC,IAAAA,UAAU,EAAE,EAAE;AACdC,IAAAA,KAAK,EAAE,EAAE;AACTC,IAAAA,YAAY,EAAE,EAAE;AAChBC,IAAAA,MAAM,EAAE,EAAE;AACVC,IAAAA,OAAO,EAAE,EAAA;GACZ,CAAA;EACD,IAAIT,SAAS,IAAIG,cAAc,EAAE;AAC7B,IAAA,OAAQA,cAAc,CAACH,SAAS,CAAC,IAAIE,KAAK,CAACQ,MAAM,CAAA;AACrD,GAAA;AACA;AACA;AACA,EAAA,QAAQV,SAAS;AACb,IAAA,KAAK,YAAY;AACb;AACA;MACA,OAAOW,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACC,QAAQ,CAACb,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGc,cAAc,CAAC,EAAEC,cAAc,CAAC,CAAA;AAC/F,GAAA;AACA,EAAA,OAAO,CAAC,CAAA;AACZ,CAAC;;;;"}