{"version":3,"file":"estimate.js","sources":["../../src/scoring/estimate.ts"],"sourcesContent":["import { MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR, } from '../data/const';\nimport utils from './utils';\nimport { zxcvbnOptions } from '../Options';\nimport bruteforceMatcher from '../matcher/bruteforce/scoring';\nimport dateMatcher from '../matcher/date/scoring';\nimport dictionaryMatcher from '../matcher/dictionary/scoring';\nimport regexMatcher from '../matcher/regex/scoring';\nimport repeatMatcher from '../matcher/repeat/scoring';\nimport sequenceMatcher from '../matcher/sequence/scoring';\nimport spatialMatcher from '../matcher/spatial/scoring';\nimport separatorMatcher from '../matcher/separator/scoring';\nconst getMinGuesses = (match, password) => {\n    let minGuesses = 1;\n    if (match.token.length < password.length) {\n        if (match.token.length === 1) {\n            minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR;\n        }\n        else {\n            minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR;\n        }\n    }\n    return minGuesses;\n};\nconst matchers = {\n    bruteforce: bruteforceMatcher,\n    date: dateMatcher,\n    dictionary: dictionaryMatcher,\n    regex: regexMatcher,\n    repeat: repeatMatcher,\n    sequence: sequenceMatcher,\n    spatial: spatialMatcher,\n    separator: separatorMatcher,\n};\nconst getScoring = (name, match) => {\n    if (matchers[name]) {\n        return matchers[name](match);\n    }\n    if (zxcvbnOptions.matchers[name] &&\n        'scoring' in zxcvbnOptions.matchers[name]) {\n        return zxcvbnOptions.matchers[name].scoring(match);\n    }\n    return 0;\n};\n// ------------------------------------------------------------------------------\n// guess estimation -- one function per match pattern ---------------------------\n// ------------------------------------------------------------------------------\n// eslint-disable-next-line complexity, max-statements\nexport default (match, password) => {\n    const extraData = {};\n    // a match's guess estimate doesn't change. cache it.\n    if ('guesses' in match && match.guesses != null) {\n        return match;\n    }\n    const minGuesses = getMinGuesses(match, password);\n    const estimationResult = getScoring(match.pattern, match);\n    let guesses = 0;\n    if (typeof estimationResult === 'number') {\n        guesses = estimationResult;\n    }\n    else if (match.pattern === 'dictionary') {\n        guesses = estimationResult.calculation;\n        extraData.baseGuesses = estimationResult.baseGuesses;\n        extraData.uppercaseVariations = estimationResult.uppercaseVariations;\n        extraData.l33tVariations = estimationResult.l33tVariations;\n    }\n    const matchGuesses = Math.max(guesses, minGuesses);\n    return {\n        ...match,\n        ...extraData,\n        guesses: matchGuesses,\n        guessesLog10: utils.log10(matchGuesses),\n    };\n};\n//# sourceMappingURL=estimate.js.map"],"names":["getMinGuesses","match","password","minGuesses","token","length","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","matchers","bruteforce","bruteforceMatcher","date","dateMatcher","dictionary","dictionaryMatcher","regex","regexMatcher","repeat","repeatMatcher","sequence","sequenceMatcher","spatial","spatialMatcher","separator","separatorMatcher","getScoring","name","zxcvbnOptions","scoring","extraData","guesses","estimationResult","pattern","calculation","baseGuesses","uppercaseVariations","l33tVariations","matchGuesses","Math","max","guessesLog10","utils","log10"],"mappings":"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"}